name: Test & Build

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Read .nvmrc
        id: nvmrc
        run: echo "NVMRC=$(cat .nvmrc)" >> $GITHUB_OUTPUT
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ steps.nvmrc.outputs.NVMRC }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run linting
        run: npm run lint
        
  unit-test:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Read .nvmrc
        id: nvmrc
        run: echo "NVMRC=$(cat .nvmrc)" >> $GITHUB_OUTPUT
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ steps.nvmrc.outputs.NVMRC }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run type check
        run: npm run typecheck
        
      - name: Run unit tests with coverage
        run: npm run test:coverage
        
      - name: Upload unit test coverage
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-coverage
          path: coverage/
          retention-days: 5
          
  e2e-test:
    needs: lint
    runs-on: ubuntu-latest
    environment: integration
    env:
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
      E2E_USERNAME: ${{ secrets.E2E_USERNAME }}
      E2E_PASSWORD: ${{ secrets.E2E_PASSWORD }}
      E2E_USERNAME_ID: ${{ secrets.E2E_USERNAME_ID }}
      
    steps:
      - uses: actions/checkout@v4
      
      - name: Read .nvmrc
        id: nvmrc
        run: echo "NVMRC=$(cat .nvmrc)" >> $GITHUB_OUTPUT
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ steps.nvmrc.outputs.NVMRC }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Install Playwright browsers
        run: npx playwright install chromium
        
      - name: Run E2E tests
        run: npm run test:e2e
        
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-test-results
          path: |
            playwright-report/
            test-results/
          retention-days: 5
          
  build:
    needs: [unit-test, e2e-test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Read .nvmrc
        id: nvmrc
        run: echo "NVMRC=$(cat .nvmrc)" >> $GITHUB_OUTPUT
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ steps.nvmrc.outputs.NVMRC }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build production
        run: npm run build
        
  status-comment:
    needs: [lint, unit-test, e2e-test, build]
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: unit-test-coverage
          path: coverage
          
      - uses: actions/download-artifact@v4
        with:
          name: e2e-test-results
          path: e2e-results
          
      - name: Create status comment
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const unitCoverageSummary = require('fs').readFileSync('./coverage/coverage-summary.json', 'utf8');
            const coverage = JSON.parse(unitCoverageSummary);
            const totalCoverage = coverage.total.statements.pct;
            
            const e2eResultsExists = require('fs').existsSync('./e2e-results/playwright-report/index.html');
            
            const body = `## CI Status: ✅ All checks passed!
            
            ### Coverage Summary
            - Unit Tests: ${totalCoverage}% statements covered
            - E2E Tests: ${e2eResultsExists ? 'Completed' : 'No results found'}
            
            ### Build
            - ✅ Build successful
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body
            }); 